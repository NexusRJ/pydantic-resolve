[tox]
envlist = 
    py38pyd1
    py38pyd2
    py39pyd1
    py39pyd2
    py310pyd1
    py310pyd2
setenv = VIRTUALENV_DISCOVERY=pyenv

[testenv]
allowlist_externals = poetry

[testenv:py38-duration]
basepython = python3.8
commands_pre =
    poetry install --no-root --sync
commands =
  poetry run pytest --durations=20 tests/pydantic_v1

[testenv:py38pyd1]
basepython = python3.8
commands_pre =
    poetry install --no-root --sync
commands =
  poetry run pytest tests/pydantic_v1

[testenv:py38pyd2]
commands_pre =
  poetry install --no-root --sync
  pip install pydantic==2.*
basepython = python3.8
commands =
  poetry run pytest tests/pydantic_v2

[testenv:py39pyd1]
basepython = python3.9
commands_pre =
    poetry install --no-root --sync
commands =
  poetry run pytest tests/pydantic_v1

[testenv:py39pyd2]
commands_pre =
  poetry install --no-root --sync
  pip install pydantic==2.*
basepython = python3.9
commands =
  poetry run pytest tests/pydantic_v2

[testenv:py310pyd1]
basepython = python3.10
commands_pre =
    poetry install --no-root --sync
commands =
  ; poetry run pytest tests/pydantic_v1
  poetry run coverage run --data-file=./cov/.result1 -m pytest tests/pydantic_v1
  ; poetry run coverage xml -o ./cov/coverage.xml


[testenv:py310pyd2]
basepython = python3.10
commands_pre =
  poetry install --no-root --sync
  pip install pydantic==2.*
commands =
  ; poetry run pytest tests/pydantic_v2
  poetry run coverage run --data-file=./cov/.result2 -m pytest tests/pydantic_v2

[testenv:coverage]
description = Combine coverage data and generate report
skip_install = true
deps = coverage
commands =
    coverage combine cov/.result1 cov/.result2
    coverage report -m
    coverage html